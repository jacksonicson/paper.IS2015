<domain log-root="${'${com.sun.aas.instanceRoot}'}/logs" application-root="${'${com.sun.aas.instanceRoot}'}/applications" version="22">
  <system-applications>
    <application context-root="" location="${'${com.sun.aas.installRootURI}'}/lib/install/applications/__admingui" directory-deployed="true" name="__admingui" object-type="system-admin">
      <module name="__admingui">
        <engine sniffer="web" />
        <engine sniffer="security" />
      </module>
    </application>
  </system-applications>
  <applications>
    <application location="${'${com.sun.aas.instanceRootURI}'}/applications/specj/" name="specj" object-type="user">
      <property name="org.glassfish.ejb.container.application_unique_id" value="89707540681261056" />
      <property name="isComposite" value="true" />
      <property name="javaWebStartEnabled" value="false" />
      <property name="defaultAppName" value="specj3755929072553178926" />
      <engine sniffer="ear" />
      <module name="specj.jar">
        <property name="org.glassfish.persistence.app_name_property" value="specj" />
        <engine sniffer="ejb" />
        <engine sniffer="security" />
        <engine sniffer="webservices" />
        <engine sniffer="jpa" />
      </module>
      <module name="supplier.war">
        <engine sniffer="webservices" />
        <engine sniffer="security" />
        <engine sniffer="web" />
      </module>
      <module name="specj.war">
        <engine sniffer="security" />
        <engine sniffer="web" />
      </module>
    </application>
    <application location="${'${com.sun.aas.instanceRootURI}'}/applications/emulator/" name="emulator" object-type="user">
      <property name="isComposite" value="true" />
      <property name="javaWebStartEnabled" value="false" />
      <property name="defaultAppName" value="emulator3226237069840008893" />
      <engine sniffer="ear" />
      <module name="emulator.war">
        <engine sniffer="webservices" />
        <engine sniffer="security" />
        <engine sniffer="web" />
      </module>
    </application>
  </applications>
  <resources>
    <jdbc-resource pool-name="__TimerPool" jndi-name="jdbc/__TimerPool" object-type="system-admin" />
    <jdbc-resource pool-name="DerbyPool" jndi-name="jdbc/__default" />
    <jdbc-connection-pool datasource-classname="org.apache.derby.jdbc.EmbeddedXADataSource" res-type="javax.sql.XADataSource" name="__TimerPool">
      <property name="databaseName" value="${'${com.sun.aas.instanceRoot}'}/lib/databases/ejbtimer" />
      <property name="connectionAttributes" value=";create=true" />
    </jdbc-connection-pool>
    <jdbc-connection-pool datasource-classname="org.apache.derby.jdbc.ClientDataSource" is-isolation-level-guaranteed="false" res-type="javax.sql.DataSource" name="DerbyPool">
      <property name="PortNumber" value="1527" />
      <property name="Password" value="APP" />
      <property name="User" value="APP" />
      <property name="serverName" value="localhost" />
      <property name="DatabaseName" value="sun-appserv-samples" />
      <property name="connectionAttributes" value=";create=true" />
    </jdbc-connection-pool>
    <jdbc-connection-pool steady-pool-size="16" is-isolation-level-guaranteed="false" max-pool-size="256" res-type="java.sql.Driver" name="specjpool" transaction-isolation-level="repeatable-read" driver-classname="com.mysql.jdbc.Driver" pool-resize-quantity="8">
      <property name="URL" value="jdbc:mysql://${mysql_server}:3306/specj" />
      <property name="password" value="root" />
      <property name="user" value="root" />
    </jdbc-connection-pool>
    <jdbc-resource pool-name="specjpool" jndi-name="jdbc/SPECjOrderDS" />
    <jdbc-resource pool-name="specjpool" jndi-name="jdbc/SPECjMfgDS" />
    <jdbc-resource pool-name="specjpool" jndi-name="jdbc/SPECjSupplierDS" />
    <jdbc-resource pool-name="specjpool" jndi-name="jdbc/SPECjLoaderDS" />
    <admin-object-resource res-adapter="jmsra" res-type="javax.jms.Queue" jndi-name="jms/BuyerQueue">
      <property name="Name" value="BuyerQueue" />
    </admin-object-resource>
    <admin-object-resource res-adapter="jmsra" res-type="javax.jms.Queue" jndi-name="jms/ReceiveQueue">
      <property name="Name" value="ReceiveQueue" />
    </admin-object-resource>
    <admin-object-resource res-adapter="jmsra" res-type="javax.jms.Queue" jndi-name="jms/LargeOrderQueue">
      <property name="Name" value="LargeOrderQueue" />
    </admin-object-resource>
    <admin-object-resource res-adapter="jmsra" res-type="javax.jms.Queue" jndi-name="jms/FulfillOrderQueue">
      <property name="Name" value="FulfillOrderQueue" />
    </admin-object-resource>
    <admin-object-resource res-adapter="jmsra" res-type="javax.jms.Queue" jndi-name="jms/LoaderQueue">
      <property name="Name" value="LoaderQueue" />
    </admin-object-resource>
    <admin-object-resource res-adapter="jmsra" res-type="javax.jms.Queue" jndi-name="jms/LoaderStatusQueue">
      <property name="Name" value="LoaderStatusQueue" />
    </admin-object-resource>
    <admin-object-resource res-adapter="jmsra" res-type="javax.jms.Queue" jndi-name="jms/WorkOrderQueue">
      <property name="Name" value="WorkOrderQueue" />
    </admin-object-resource>
    <admin-object-resource res-adapter="jmsra" res-type="javax.jms.Queue" jndi-name="jms/PurchaseOrderQueue">
      <property name="Name" value="PurchaseOrderQueue" />
    </admin-object-resource>
    <connector-resource pool-name="jms/BuyerQueueConnectionFactory" jndi-name="jms/BuyerQueueConnectionFactory" />
    <connector-connection-pool name="jms/BuyerQueueConnectionFactory" resource-adapter-name="jmsra" connection-definition-name="javax.jms.QueueConnectionFactory" />
    <connector-resource pool-name="jms/ReceiveQueueConnectionFactory" jndi-name="jms/ReceiveQueueConnectionFactory" />
    <connector-connection-pool name="jms/ReceiveQueueConnectionFactory" resource-adapter-name="jmsra" connection-definition-name="javax.jms.QueueConnectionFactory" />
    <connector-resource pool-name="jms/LargeOrderQueueConnectionFactory" jndi-name="jms/LargeOrderQueueConnectionFactory" />
    <connector-connection-pool name="jms/LargeOrderQueueConnectionFactory" resource-adapter-name="jmsra" connection-definition-name="javax.jms.QueueConnectionFactory" />
    <connector-resource pool-name="jms/FulfillOrderQueueConnectionFactory" jndi-name="jms/FulfillOrderQueueConnectionFactory" />
    <connector-connection-pool name="jms/FulfillOrderQueueConnectionFactory" resource-adapter-name="jmsra" connection-definition-name="javax.jms.QueueConnectionFactory" />
    <connector-resource pool-name="jms/WorkOrderQueueConnectionFactory" jndi-name="jms/WorkOrderQueueConnectionFactory" />
    <connector-connection-pool name="jms/WorkOrderQueueConnectionFactory" resource-adapter-name="jmsra" connection-definition-name="javax.jms.QueueConnectionFactory" />
    <connector-resource pool-name="jms/PurchaseQueueConnectionFactory" jndi-name="jms/PurchaseQueueConnectionFactory" />
    <connector-connection-pool name="jms/PurchaseQueueConnectionFactory" resource-adapter-name="jmsra" connection-definition-name="javax.jms.QueueConnectionFactory" />
    <connector-resource pool-name="jms/LoaderQueueConnectionFactory" jndi-name="jms/LoaderQueueConnectionFactory" />
    <connector-connection-pool name="jms/LoaderQueueConnectionFactory" resource-adapter-name="jmsra" connection-definition-name="javax.jms.QueueConnectionFactory" />
  </resources>
  <servers>
    <server name="server" config-ref="server-config">
      <application-ref ref="__admingui" virtual-servers="__asadmin" />
      <application-ref ref="specj" virtual-servers="server" />
      <application-ref ref="emulator" virtual-servers="server" />
      <resource-ref ref="jdbc/__TimerPool" />
      <resource-ref ref="jdbc/__default" />
      <resource-ref ref="jdbc/SPECjOrderDS" />
      <resource-ref ref="jdbc/SPECjMfgDS" />
      <resource-ref ref="jdbc/SPECjSupplierDS" />
      <resource-ref ref="jdbc/SPECjLoaderDS" />
      <resource-ref ref="jms/BuyerQueue" />
      <resource-ref ref="jms/ReceiveQueue" />
      <resource-ref ref="jms/LargeOrderQueue" />
      <resource-ref ref="jms/FulfillOrderQueue" />
      <resource-ref ref="jms/LoaderQueue" />
      <resource-ref ref="jms/LoaderStatusQueue" />
      <resource-ref ref="jms/WorkOrderQueue" />
      <resource-ref ref="jms/PurchaseOrderQueue" />
      <resource-ref ref="jms/BuyerQueueConnectionFactory" enabled="false" />
      <resource-ref ref="jms/ReceiveQueueConnectionFactory" />
      <resource-ref ref="jms/LargeOrderQueueConnectionFactory" />
      <resource-ref ref="jms/FulfillOrderQueueConnectionFactory" />
      <resource-ref ref="jms/WorkOrderQueueConnectionFactory" />
      <resource-ref ref="jms/PurchaseQueueConnectionFactory" />
      <resource-ref ref="jms/LoaderQueueConnectionFactory" />
    </server>
  </servers>
  <configs>
    <config name="server-config">
      <http-service>
        <access-log />
        <virtual-server id="server" network-listeners="http-listener-1,http-listener-2" />
        <virtual-server id="__asadmin" network-listeners="admin-listener" />
      </http-service>
      <iiop-service>
        <orb use-thread-pool-ids="thread-pool-1" />
        <iiop-listener id="orb-listener-1" port="3700" address="${targetHostName}" lazy-init="true" />
        <iiop-listener id="SSL" port="3820" address="${targetHostName}" security-enabled="true">
          <ssl cert-nickname="s1as" />
        </iiop-listener>
        <iiop-listener id="SSL_MUTUALAUTH" port="3920" address="${targetHostName}" security-enabled="true">
          <ssl cert-nickname="s1as" client-auth-enabled="true" />
        </iiop-listener>
      </iiop-service>
      <admin-service system-jmx-connector-name="system" type="das-and-server">
        <jmx-connector port="8686" address="0.0.0.0" security-enabled="false" name="system" auth-realm-name="admin-realm" />
        <das-config dynamic-reload-enabled="true" autodeploy-dir="${'${com.sun.aas.instanceRoot}'}/autodeploy" autodeploy-enabled="true" />
        <property name="adminConsoleContextRoot" value="/admin" />
        <property name="adminConsoleDownloadLocation" value="${'${com.sun.aas.installRoot}'}/lib/install/applications/admingui.war" />
        <property name="ipsRoot" value="${'${com.sun.aas.installRoot}'}/.." />
        <property name="adminConsoleVersion" value="3.0.1,0-22:20100608T221423Z" />
      </admin-service>
      <connector-service />
      <web-container>
        <session-config>
          <session-manager>
            <manager-properties />
            <store-properties />
          </session-manager>
          <session-properties />
        </session-config>
      </web-container>
      <ejb-container session-store="${'${com.sun.aas.instanceRoot}'}/session-store">
        <ejb-timer-service />
      </ejb-container>
      <mdb-container />
      <jms-service default-jms-host="default_JMS_host" type="EMBEDDED">
        <jms-host host="localhost" name="default_JMS_host" lazy-init="true" />
      </jms-service>
      <security-service>
        <auth-realm name="admin-realm" classname="com.sun.enterprise.security.auth.realm.file.FileRealm">
          <property name="file" value="${'${com.sun.aas.instanceRoot}'}/config/admin-keyfile" />
          <property name="jaas-context" value="fileRealm" />
        </auth-realm>
        <auth-realm name="file" classname="com.sun.enterprise.security.auth.realm.file.FileRealm">
          <property name="file" value="${'${com.sun.aas.instanceRoot}'}/config/keyfile" />
          <property name="jaas-context" value="fileRealm" />
        </auth-realm>
        <auth-realm name="certificate" classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm" />
        <jacc-provider policy-provider="com.sun.enterprise.security.provider.PolicyWrapper" name="default" policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl">
          <property name="repository" value="${'${com.sun.aas.instanceRoot}'}/generated/policy" />
        </jacc-provider>
        <jacc-provider policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider" name="simple" policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory" />
        <audit-module name="default" classname="com.sun.enterprise.security.Audit">
          <property name="auditOn" value="false" />
        </audit-module>
        <message-security-config auth-layer="SOAP">
          <provider-config provider-type="client" provider-id="XWS_ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property name="encryption.key.alias" value="s1as" />
            <property name="signature.key.alias" value="s1as" />
            <property name="dynamic.username.password" value="false" />
            <property name="debug" value="false" />
          </provider-config>
          <provider-config provider-type="client" provider-id="ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property name="encryption.key.alias" value="s1as" />
            <property name="signature.key.alias" value="s1as" />
            <property name="dynamic.username.password" value="false" />
            <property name="debug" value="false" />
            <property name="security.config" value="${'${com.sun.aas.instanceRoot}'}/config/wss-server-config-1.0.xml" />
          </provider-config>
          <provider-config provider-type="server" provider-id="XWS_ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property name="encryption.key.alias" value="s1as" />
            <property name="signature.key.alias" value="s1as" />
            <property name="debug" value="false" />
          </provider-config>
          <provider-config provider-type="server" provider-id="ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
            <request-policy auth-source="content" />
            <response-policy auth-source="content" />
            <property name="encryption.key.alias" value="s1as" />
            <property name="signature.key.alias" value="s1as" />
            <property name="debug" value="false" />
            <property name="security.config" value="${'${com.sun.aas.instanceRoot}'}/config/wss-server-config-1.0.xml" />
          </provider-config>
        </message-security-config>
      </security-service>
      <transaction-service tx-log-dir="${'${com.sun.aas.instanceRoot}'}/logs" />
      <monitoring-service>
        <module-monitoring-levels />
      </monitoring-service>
      <java-config debug-options="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=9009" system-classpath="" classpath-suffix="">
        <jvm-options>-XX:MaxPermSize=192m</jvm-options>
        <jvm-options>-client</jvm-options>
        <jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
        <jvm-options>-XX:+LogVMOutput</jvm-options>
        <jvm-options>-XX:LogFile=${'${com.sun.aas.instanceRoot}'}/logs/jvm.log</jvm-options>
        <jvm-options>-Djava.endorsed.dirs=${'${com.sun.aas.installRoot}'}/modules/endorsed${'${path.separator}'}${'${com.sun.aas.installRoot}'}/lib/endorsed</jvm-options>
        <jvm-options>-Djava.security.policy=${'${com.sun.aas.instanceRoot}'}/config/server.policy</jvm-options>
        <jvm-options>-Djava.security.auth.login.config=${'${com.sun.aas.instanceRoot}'}/config/login.conf</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.security.httpsOutboundKeyAlias=s1as</jvm-options>
        <jvm-options>-Djavax.net.ssl.keyStore=${'${com.sun.aas.instanceRoot}'}/config/keystore.jks</jvm-options>
        <jvm-options>-Djavax.net.ssl.trustStore=${'${com.sun.aas.instanceRoot}'}/config/cacerts.jks</jvm-options>
        <jvm-options>-Djava.ext.dirs=${'${com.sun.aas.javaRoot}'}/lib/ext${'${path.separator}'}${'${com.sun.aas.javaRoot}'}/jre/lib/ext${'${path.separator}'}${'${com.sun.aas.instanceRoot}'}/lib/ext</jvm-options>
        <jvm-options>-Djdbc.drivers=org.apache.derby.jdbc.ClientDriver</jvm-options>
        <jvm-options>-DANTLR_USE_DIRECT_CLASS_LOADING=true</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.port=6666</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.maxconn=1</jvm-options>
        <jvm-options>-Dosgi.shell.telnet.ip=127.0.0.1</jvm-options>
        <jvm-options>-Dfelix.fileinstall.dir=${'${com.sun.aas.installRoot}'}/modules/autostart/</jvm-options>
        <jvm-options>-Dfelix.fileinstall.poll=5000</jvm-options>
        <jvm-options>-Dfelix.fileinstall.debug=1</jvm-options>
        <jvm-options>-Dfelix.fileinstall.bundles.new.start=true</jvm-options>
        <jvm-options>-Dorg.glassfish.web.rfc2109_cookie_names_enforced=false</jvm-options>
        <jvm-options>-XX:NewRatio=2</jvm-options>
        <jvm-options>-Xmx1280m</jvm-options>
      </java-config>
      <network-config>
        <protocols>
          <protocol name="http-listener-1">
            <http max-connections="250" default-virtual-server="server" server-name="">
              <file-cache enabled="false" />
            </http>
          </protocol>
          <protocol security-enabled="true" name="http-listener-2">
            <http max-connections="250" default-virtual-server="server" server-name="">
              <file-cache enabled="false" />
            </http>
            <ssl ssl3-enabled="false" cert-nickname="s1as" />
          </protocol>
          <protocol name="admin-listener">
            <http max-connections="250" default-virtual-server="__asadmin" server-name="">
              <file-cache enabled="false" />
            </http>
          </protocol>
        </protocols>
        <network-listeners>
          <network-listener port="8080" protocol="http-listener-1" transport="tcp" name="http-listener-1" thread-pool="http-thread-pool" />
          <network-listener port="8181" protocol="http-listener-2" transport="tcp" name="http-listener-2" thread-pool="http-thread-pool" />
          <network-listener port="4848" protocol="admin-listener" transport="tcp" name="admin-listener" thread-pool="http-thread-pool" />
        </network-listeners>
        <transports>
          <transport name="tcp" />
        </transports>
      </network-config>
      <thread-pools>
        <thread-pool name="http-thread-pool" />
        <thread-pool max-thread-pool-size="200" name="thread-pool-1" />
      </thread-pools>
    </config>
  </configs>
  <property name="administrative.domain.name" value="domain1" />
</domain>
